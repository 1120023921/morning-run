<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.doublehh.sport.dao.GradeMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="cn.doublehh.sport.model.Grade">
        <id column="id" property="id"/>
        <result column="job_number" property="jobNumber"/>
        <result column="item_number" property="itemNumber"/>
        <result column="type" property="type"/>
        <result column="grade" property="grade"/>
        <result column="grade_create_time" property="gradeCreateTime"/>
        <result column="device_number" property="deviceNumber"/>
        <result column="semester_id" property="semesterId"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
        <result column="version" property="version"/>
        <result column="is_valid" property="isValid"/>
    </resultMap>
    <resultMap id="GradeToGradeViewMap" type="cn.doublehh.sport.vo.GradeView">
        <result column="id" property="id"/>
        <result column="job_number" property="jobNumber"/>
        <result column="device_number" property="deviceNumber"/>
        <result column="create_time" property="createTime"/>
        <result column="grade" property="grade"/>
        <result column="item_number" property="itemNumber"/>
        <result column="type" property="type"/>
        <result column="semester_id" property="semesterId"/>
        <result column="grade_create_time" property="gradeCreateTime"/>
    </resultMap>
    <sql id="BaseSql">id, job_number, device_number, create_time, update_time, grade_create_time, grade, item_number, type,
    semester_id, version, is_valid
    </sql>
    <insert id="insertTmpGrade" parameterType="cn.doublehh.sport.model.Grade">
        INSERT INTO grade_tmp(<include refid="BaseSql"/>) VALUES
        (#{id},#{jobNumber},#{deviceNumber},#{createTime},#{updateTime},#{gradeCreateTime},#{grade},#{itemNumber},#{type},#{semesterId},#{version},#{isValid})
    </insert>
    <insert id="insertGradeFromTmp">
        INSERT INTO grade(<include refid="BaseSql"/>) (SELECT
        <include refid="BaseSql"/>
        FROM grade_tmp)
    </insert>
    <delete id="deleteGradeTmp">
        DELETE
        FROM grade_tmp
    </delete>
    <select id="getGrade" resultMap="GradeToGradeViewMap">
        SELECT grade.id,
               grade.job_number,
               grade.device_number,
               grade.grade_create_time,
               grade.grade,
               item.item_name,
               grade.semester_id,
               semester.semester,
               semester.weight,
               t_s_user.NAME
        FROM grade
                 LEFT JOIN t_s_user ON grade.job_number = t_s_user.uid
                 LEFT JOIN semester ON grade.semester_id = semester.id
                 LEFT JOIN item ON grade.type = item.type
                                       AND grade.item_number = item.item_number
        WHERE grade.job_number = #{jobNumber}
          AND grade.type = #{type}
          AND grade.is_valid = '1'
    </select>
    <select id="getAttendanceGrade" resultMap="GradeToGradeViewMap">
        SELECT t1.id,
               t1.job_number,
               t1.device_number,
               t1.create_time,
               t1.grade_create_time,
               SUM(CASE LOCATE('-', t1.grade)
                       WHEN 0 THEN CONVERT(t1.grade, signed)
                       ELSE CONVERT(CONCAT('-', SUBSTRING_INDEX(t1.grade, '-', -1)), signed)
                           END) grade,
               t1.item_number,
               t1.type,
               t1.semester_id,
               t1.item_name,
               t1.semester,
               t1.weight,
               t1.NAME
        FROM (SELECT grade.id,
                     grade.job_number,
                     grade.device_number,
                     grade.create_time,
                     grade.grade_create_time,
                     MAX(grade.grade) grade,
                     grade.item_number,
                     grade.type,
                     grade.semester_id,
                     item.item_name,
                     semester.semester,
                     semester.weight,
                     t_s_user.NAME
              FROM grade
                       LEFT JOIN t_s_user ON grade.job_number = t_s_user.uid
                       LEFT JOIN semester ON grade.semester_id = semester.id
                       LEFT JOIN item ON grade.type = item.type
                                             AND grade.item_number = item.item_number
              WHERE grade.job_number = #{jobNumber}
                AND grade.is_valid = '1'
              GROUP BY grade.type,
                       grade.item_number,
                       grade.semester_id,
                       SUBSTR(grade.grade_create_time, 1, 8)) t1
        WHERE t1.job_number = #{jobNumber}
          AND t1.type = #{type}
        GROUP BY t1.type,
                 t1.item_number,
                 t1.semester_id
    </select>
    <select id="getAttendanceGradeDetail" parameterType="cn.doublehh.sport.vo.AttendanceGradeDetailParam"
            resultType="cn.doublehh.sport.vo.GradeView">
        SELECT grade.id,
               grade.job_number,
               grade.device_number,
               grade.create_time,
               grade.grade_create_time,
               CASE LOCATE('-', grade.grade)
                   WHEN 0 THEN CONVERT(grade.grade, signed)
                   ELSE CONVERT(CONCAT('-', SUBSTRING_INDEX(grade.grade, '-', -1)), signed)
                       END grade,
               grade.semester_id,
               item.item_name,
               semester.semester,
               semester.weight,
               t_s_user.NAME
        FROM grade
                 LEFT JOIN t_s_user ON grade.job_number = t_s_user.uid
                 LEFT JOIN semester ON grade.semester_id = semester.id
                 LEFT JOIN item ON grade.type = item.type
                                       AND grade.item_number = item.item_number
        WHERE grade.job_number = #{jobNumber}
          AND grade.semester_id = #{semesterId}
          AND grade.type = #{type}
          AND grade.item_number = #{itemNumber}
          AND grade.is_valid = '1'
        GROUP BY SUBSTR(grade.grade_create_time, 1, 8)
    </select>
    <select id="getExportList" resultMap="GradeToGradeViewMap">
        SELECT res.id, res.job_number, res.grade_create_time, res.grade, res.item_name, t_s_user.NAME
        FROM (SELECT t1.id, t1.job_number, t1.grade_create_time, SUM(CASE LOCATE('-', t1.grade)
                                                                         WHEN 0 THEN CONVERT(t1.grade, signed)
                                                                         ELSE CONVERT(CONCAT('-', SUBSTRING_INDEX(t1.grade, '-', -1)), signed)
                                                                             END) grade, t2.item_name
              FROM (SELECT id, job_number, grade_create_time, MAX(grade) grade, item_number, semester_id, type
                    FROM grade
                    WHERE type = '01'
                      AND semester_id = #{semesterId}
                      AND grade.is_valid = '1'
                    GROUP BY type,
                             item_number,
                             SUBSTR(grade_create_time, 1, 8),
                             job_number) t1
                       LEFT JOIN item t2 ON t1.type = t2.type
                                                AND t1.item_number = t2.item_number
              GROUP BY t1.type,
                       t1.item_number,
                       t1.semester_id,
                       t1.job_number
              UNION
              SELECT grade.id, grade.job_number, grade.grade_create_time, grade.grade, item.item_name
              FROM grade
                       LEFT JOIN item ON grade.type = item.type
                                             AND grade.item_number = item.item_number
              WHERE grade.semester_id = #{semesterId}
                AND grade.type = '02'
                AND grade.is_valid = '1'
              GROUP BY grade.type,
                       grade.item_number,
                       grade.job_number
              UNION
              SELECT grade.id, grade.job_number, grade.grade_create_time, grade.grade, item.item_name
              FROM grade
                       LEFT JOIN item ON grade.type = item.type
                                             AND grade.item_number = item.item_number
              WHERE grade.semester_id = #{semesterId}
                AND grade.type = '03'
                AND grade.is_valid = '1'
              GROUP BY grade.type,
                       grade.item_number,
                       grade.job_number) res
                 LEFT JOIN t_s_user ON res.job_number = t_s_user.uid
    </select>
    <select id="getTmpGradeList" resultMap="BaseResultMap">
        SELECT
        <include refid="BaseSql"/>
        FROM grade_tmp
    </select>

</mapper>
